{"ast":null,"code":"var _jsxFileName = \"D:\\\\oe-php-test\\\\ownego\\\\src\\\\component\\\\Nav.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GET_ALL_STORE_SAGA } from '../redux/type/StoreType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    listStore\n  } = useSelector(state => state.storeReducer);\n  useEffect(() => {\n    dispatch({\n      type: GET_ALL_STORE_SAGA\n    });\n  }, []);\n  function setColor(e) {\n    var target = e.target,\n      count = +target.dataset.count;\n    target.style.backgroundColor = count === 1 ? \"#7FFF00\" : '#FFFFFF';\n    target.dataset.count = count === 1 ? 0 : 1;\n    /* \r\n            () : ? - this is conditional (ternary) operator - equals \r\n            if (count === 1) {\r\n       target.style.backgroundColor = \"#7FFF00\";\r\n       target.dataset.count = 0;\r\n    } else {\r\n       target.style.backgroundColor = \"#FFFFFF\";\r\n       target.dataset.count = 1;\r\n    } \r\n    target.dataset - return all \"data attributes\" for current element, \r\n    in the form of object, \r\n    and you don't need use global variable in order to save the state 0 or 1\r\n    */\n  }\n\n  const renderLink = () => {\n    return listStore.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => {\n          localStorage.setItem('store', JSON.stringify(item));\n          setColor(event);\n        },\n        style: {\n          color: 'white',\n          fontSize: '24px',\n          height: '65px',\n          width: '100%',\n          backgroundColor: '#203259',\n          border: '0px'\n        },\n        className: \"nav-link\",\n        \"aria-current\": \"page\",\n        children: [\"Store \", item.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav flex-column\",\n      style: {\n        width: '100%%',\n        backgroundColor: '#203259',\n        minHeight: '713px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          paddingTop: '30px',\n          fontSize: '25px',\n          fontWeight: '400',\n          fontFamily: 'revert'\n        },\n        children: \"Milk Tea Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '50px'\n        },\n        children: renderLink()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Nav, \"e55IGIKcJ2BqxZbjHXECtPvqp0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","GET_ALL_STORE_SAGA","Nav","dispatch","listStore","state","storeReducer","type","setColor","e","target","count","dataset","style","backgroundColor","renderLink","map","item","index","event","localStorage","setItem","JSON","stringify","color","fontSize","height","width","border","id","minHeight","paddingTop","fontWeight","fontFamily","marginTop"],"sources":["D:/oe-php-test/ownego/src/component/Nav.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GET_ALL_STORE_SAGA } from '../redux/type/StoreType'\r\n\r\nexport default function Nav() {\r\n\r\n    const dispatch = useDispatch()\r\n    const { listStore } = useSelector(state => state.storeReducer)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_ALL_STORE_SAGA\r\n        })\r\n    }, [])\r\n\r\n    function setColor(e) {\r\n        var target = e.target,\r\n            count = +target.dataset.count;\r\n      \r\n         target.style.backgroundColor = count === 1 ? \"#7FFF00\" : '#FFFFFF';\r\n         target.dataset.count = count === 1 ? 0 : 1;\r\n         /* \r\n      \r\n         () : ? - this is conditional (ternary) operator - equals \r\n      \r\n         if (count === 1) {\r\n            target.style.backgroundColor = \"#7FFF00\";\r\n            target.dataset.count = 0;\r\n         } else {\r\n            target.style.backgroundColor = \"#FFFFFF\";\r\n            target.dataset.count = 1;\r\n         } \r\n         target.dataset - return all \"data attributes\" for current element, \r\n         in the form of object, \r\n         and you don't need use global variable in order to save the state 0 or 1\r\n        */ \r\n      }\r\n      \r\n    const renderLink = () => {\r\n        return listStore.map((item, index) => {\r\n            return <button onClick={(event) => {localStorage.setItem('store', JSON.stringify(item)); setColor(event)}} style={{ color: 'white', fontSize: '24px', height: '65px', width: '100%', backgroundColor: '#203259', border: '0px' }} className=\"nav-link\" aria-current=\"page\">Store {item.id}</button>\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className=\"nav flex-column\" style={{ width: '100%%', backgroundColor: '#203259', minHeight: '713px' }}>\r\n                <p style={{ color: 'white', paddingTop: '30px', fontSize: '25px', fontWeight: '400', fontFamily: 'revert' }}>Milk Tea Store</p>\r\n                <div style={{ marginTop: '50px' }}>\r\n                    {renderLink()}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,yBAAyB;AAAA;AAE5D,eAAe,SAASC,GAAG,GAAG;EAAA;EAE1B,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM;IAAEK;EAAU,CAAC,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,YAAY,CAAC;EAE9DR,SAAS,CAAC,MAAM;IACZK,QAAQ,CAAC;MACLI,IAAI,EAAEN;IACV,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASO,QAAQ,CAACC,CAAC,EAAE;IACjB,IAAIC,MAAM,GAAGD,CAAC,CAACC,MAAM;MACjBC,KAAK,GAAG,CAACD,MAAM,CAACE,OAAO,CAACD,KAAK;IAEhCD,MAAM,CAACG,KAAK,CAACC,eAAe,GAAGH,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;IAClED,MAAM,CAACE,OAAO,CAACD,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;IAC1C;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGM;;EAEF,MAAMI,UAAU,GAAG,MAAM;IACrB,OAAOX,SAAS,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAClC,oBAAO;QAAQ,OAAO,EAAGC,KAAK,IAAK;UAACC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;UAAET,QAAQ,CAACW,KAAK,CAAC;QAAA,CAAE;QAAC,KAAK,EAAE;UAAEK,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEb,eAAe,EAAE,SAAS;UAAEc,MAAM,EAAE;QAAM,CAAE;QAAC,SAAS,EAAC,UAAU;QAAC,gBAAa,MAAM;QAAA,WAAC,QAAM,EAACX,IAAI,CAACY,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU;IACvS,CAAC,CAAC;EACN,CAAC;EACD,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,iBAAiB;MAAC,KAAK,EAAE;QAAEF,KAAK,EAAE,OAAO;QAAEb,eAAe,EAAE,SAAS;QAAEgB,SAAS,EAAE;MAAQ,CAAE;MAAA,wBACvG;QAAG,KAAK,EAAE;UAAEN,KAAK,EAAE,OAAO;UAAEO,UAAU,EAAE,MAAM;UAAEN,QAAQ,EAAE,MAAM;UAAEO,UAAU,EAAE,KAAK;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAI,eAC/H;QAAK,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAA,UAC7BnB,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QACX;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAjDuBb,GAAG;EAAA,QAENH,WAAW,EACNC,WAAW;AAAA;AAAA,KAHbE,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}