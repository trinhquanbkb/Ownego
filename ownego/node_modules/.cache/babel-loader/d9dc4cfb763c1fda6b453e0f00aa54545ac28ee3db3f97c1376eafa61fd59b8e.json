{"ast":null,"code":"// import { Button, Dropdown, Col, Row, Card } from 'antd';\n// import React, { useEffect, useState } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { CaretDownOutlined } from '@ant-design/icons';\n// import { GET_ALL_STORE_AND_PRODUCT_SAGA } from '../redux/type/StoreType';\n\n// export default function Content() {\n//     const dispatch = useDispatch()\n//     const { listStoreAndProduct } = useSelector(state => state.storeReducer)\n//     const [filterName, setFilterName] = useState({ name: 'Name', id: null })\n//     let t = JSON.parse(localStorage.getItem('store')).id\n//     useEffect(() => {\n//         dispatch({\n//             type: GET_ALL_STORE_AND_PRODUCT_SAGA\n//         })\n//     }, [])\n\n//     useEffect(() => {\n//     console.log('gsdgsd')\n//     }, [t, filterName.id])\n\n//     const onMenuClick = (e) => {\n//         let arr = JSON.parse(localStorage.getItem('productOfStore'))\n//         let arrName = JSON.parse(localStorage.getItem('productOfStore')).map(item => {\n//             return item.name\n//         })\n//         let arrPrice = JSON.parse(localStorage.getItem('productOfStore')).map(item => {\n//             return item.price\n//         })\n//         let res = []\n//         if (e.key == 1) {\n//             arrName.sort()\n//             arrName.forEach(e => {\n//                 arr.forEach(i => {\n//                     if (i.name === e) {\n//                         res.push(i)\n//                     }\n//                 })\n//             })\n//             localStorage.setItem('productOfStore', JSON.stringify(res))\n//             setFilterName({ ...filterName, name: 'Tên tăng dần', id: 1 })\n//         } else if (e.key == 2) {\n//             arrName.sort()\n//             arrName.forEach(e => {\n//                 arr.forEach(i => {\n//                     if (i.name === e) {\n//                         res.push(i)\n//                     }\n//                 })\n//             })\n//             localStorage.setItem('productOfStore', JSON.stringify(res.reverse()))\n//             setFilterName({ ...filterName, name: 'Tên giảm dần', id: 2 })\n//         } else if (e.key == 3) {\n//             arrPrice.sort()\n//             arrPrice.forEach(e => {\n//                 arr.forEach(i => {\n//                     if (i.price === e) {\n//                         res.push(i)\n//                     }\n//                 })\n//             })\n//             localStorage.setItem('productOfStore', JSON.stringify(res))\n//             setFilterName({ ...filterName, name: 'Giá tăng dần', id: 3 })\n//         } else if (e.key == 4) {\n//             arrPrice.sort()\n//             arrPrice.forEach(e => {\n//                 arr.forEach(i => {\n//                     if (i.price === e) {\n//                         res.push(i)\n//                     }\n//                 })\n//             })\n//             localStorage.setItem('productOfStore', JSON.stringify(res.reverse()))\n//             setFilterName({ ...filterName, name: 'Giá giảm dần', id: 4 })\n//         }\n//     };\n\n//     const items = [\n//         {\n//             key: '1',\n//             label: 'Tên tăng dần',\n//         },\n//         {\n//             key: '2',\n//             label: 'Tên giảm dần',\n//         },\n//         {\n//             key: '3',\n//             label: 'Giá tăng dần',\n//         },\n//         {\n//             key: '4',\n//             label: 'Giá giảm dần',\n//         },\n//     ];\n\n//     const renderItem = () => {\n//         return JSON.parse(localStorage.getItem('productOfStore')).map(item => {\n//             return <Col span={8} style={{ marginTop: '25px', marginBottom: '25px' }}>\n//                 <Card\n//                     hoverable\n//                     style={{\n//                         width: '280px',\n//                         boxShadow: '1px 1px 1px grey',\n//                         textAlign: 'left',\n//                         paddingLeft: '10px',\n//                         margin: '0 auto',\n//                         height: '300px'\n//                     }}\n//                 >\n//                     <p style={{ fontSize: '20px', color: '#203259', paddingTop: '0px' }}>MT-01</p>\n//                     <p style={{ fontSize: '20px', color: '#203259', marginTop: '-10px', paddingBottom: '10px', fontWeight: '500', borderBlockEnd: '3px #203259 solid' }}>{item.name}</p>\n//                     <p style={{ fontSize: '20px', color: '#203259', paddingTop: '0px', fontWeight: '500' }}>Toppings: </p>\n//                     <p style={{ fontSize: '18px', color: '#203259', paddingTop: '0px', marginTop: '-10px' }}>{item.toppings}</p>\n//                     <p style={{ fontSize: '24px', color: '#203259', paddingTop: '40px', textAlign: 'right', paddingRight: '10px', fontWeight: '700' }}>${item.price}</p>\n//                 </Card>\n//             </Col>\n//         })\n//     }\n\n//     return (\n\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/oe-php-test/ownego/src/component/Content.js"],"sourcesContent":["// import { Button, Dropdown, Col, Row, Card } from 'antd';\r\n// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { CaretDownOutlined } from '@ant-design/icons';\r\n// import { GET_ALL_STORE_AND_PRODUCT_SAGA } from '../redux/type/StoreType';\r\n\r\n\r\n// export default function Content() {\r\n//     const dispatch = useDispatch()\r\n//     const { listStoreAndProduct } = useSelector(state => state.storeReducer)\r\n//     const [filterName, setFilterName] = useState({ name: 'Name', id: null })\r\n//     let t = JSON.parse(localStorage.getItem('store')).id\r\n//     useEffect(() => {\r\n//         dispatch({\r\n//             type: GET_ALL_STORE_AND_PRODUCT_SAGA\r\n//         })\r\n//     }, [])\r\n\r\n//     useEffect(() => {\r\n//     console.log('gsdgsd')\r\n//     }, [t, filterName.id])\r\n\r\n//     const onMenuClick = (e) => {\r\n//         let arr = JSON.parse(localStorage.getItem('productOfStore'))\r\n//         let arrName = JSON.parse(localStorage.getItem('productOfStore')).map(item => {\r\n//             return item.name\r\n//         })\r\n//         let arrPrice = JSON.parse(localStorage.getItem('productOfStore')).map(item => {\r\n//             return item.price\r\n//         })\r\n//         let res = []\r\n//         if (e.key == 1) {\r\n//             arrName.sort()\r\n//             arrName.forEach(e => {\r\n//                 arr.forEach(i => {\r\n//                     if (i.name === e) {\r\n//                         res.push(i)\r\n//                     }\r\n//                 })\r\n//             })\r\n//             localStorage.setItem('productOfStore', JSON.stringify(res))\r\n//             setFilterName({ ...filterName, name: 'Tên tăng dần', id: 1 })\r\n//         } else if (e.key == 2) {\r\n//             arrName.sort()\r\n//             arrName.forEach(e => {\r\n//                 arr.forEach(i => {\r\n//                     if (i.name === e) {\r\n//                         res.push(i)\r\n//                     }\r\n//                 })\r\n//             })\r\n//             localStorage.setItem('productOfStore', JSON.stringify(res.reverse()))\r\n//             setFilterName({ ...filterName, name: 'Tên giảm dần', id: 2 })\r\n//         } else if (e.key == 3) {\r\n//             arrPrice.sort()\r\n//             arrPrice.forEach(e => {\r\n//                 arr.forEach(i => {\r\n//                     if (i.price === e) {\r\n//                         res.push(i)\r\n//                     }\r\n//                 })\r\n//             })\r\n//             localStorage.setItem('productOfStore', JSON.stringify(res))\r\n//             setFilterName({ ...filterName, name: 'Giá tăng dần', id: 3 })\r\n//         } else if (e.key == 4) {\r\n//             arrPrice.sort()\r\n//             arrPrice.forEach(e => {\r\n//                 arr.forEach(i => {\r\n//                     if (i.price === e) {\r\n//                         res.push(i)\r\n//                     }\r\n//                 })\r\n//             })\r\n//             localStorage.setItem('productOfStore', JSON.stringify(res.reverse()))\r\n//             setFilterName({ ...filterName, name: 'Giá giảm dần', id: 4 })\r\n//         }\r\n//     };\r\n    \r\n//     const items = [\r\n//         {\r\n//             key: '1',\r\n//             label: 'Tên tăng dần',\r\n//         },\r\n//         {\r\n//             key: '2',\r\n//             label: 'Tên giảm dần',\r\n//         },\r\n//         {\r\n//             key: '3',\r\n//             label: 'Giá tăng dần',\r\n//         },\r\n//         {\r\n//             key: '4',\r\n//             label: 'Giá giảm dần',\r\n//         },\r\n//     ];\r\n\r\n//     const renderItem = () => {\r\n//         return JSON.parse(localStorage.getItem('productOfStore')).map(item => {\r\n//             return <Col span={8} style={{ marginTop: '25px', marginBottom: '25px' }}>\r\n//                 <Card\r\n//                     hoverable\r\n//                     style={{\r\n//                         width: '280px',\r\n//                         boxShadow: '1px 1px 1px grey',\r\n//                         textAlign: 'left',\r\n//                         paddingLeft: '10px',\r\n//                         margin: '0 auto',\r\n//                         height: '300px'\r\n//                     }}\r\n//                 >\r\n//                     <p style={{ fontSize: '20px', color: '#203259', paddingTop: '0px' }}>MT-01</p>\r\n//                     <p style={{ fontSize: '20px', color: '#203259', marginTop: '-10px', paddingBottom: '10px', fontWeight: '500', borderBlockEnd: '3px #203259 solid' }}>{item.name}</p>\r\n//                     <p style={{ fontSize: '20px', color: '#203259', paddingTop: '0px', fontWeight: '500' }}>Toppings: </p>\r\n//                     <p style={{ fontSize: '18px', color: '#203259', paddingTop: '0px', marginTop: '-10px' }}>{item.toppings}</p>\r\n//                     <p style={{ fontSize: '24px', color: '#203259', paddingTop: '40px', textAlign: 'right', paddingRight: '10px', fontWeight: '700' }}>${item.price}</p>\r\n//                 </Card>\r\n//             </Col>\r\n//         })\r\n//     }\r\n\r\n//     return (\r\n        \r\n//     )\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}